

// events.onPlayerTick(function(event as PlayerTickEvent) {
// 	var player = event.player as IPlayer;
// 	if (!player.world.remote) {
// 		var item = event.player.currentItem;
// 		if (isNull(item)) return;
// 		if (item.matches(<contenttweaker:physics_excalibur>)) {
// 			if (isNull(player.attackingEntity)) return;
// 			print(player.attackingEntity.id);
// 		}
// 	}
// });


// events.onPlayerAttackEntity(function(event as PlayerAttackEntityEvent){
// 	var player = event.player as IPlayer;
// 	if (!player.world.remote && !event.entity.world.remote) {
// 		var item = event.player.currentItem;
// 		if (isNull(item)) return;
// 		if (item.matches(<contenttweaker:physics_excalibur>)) {
// 			if (player.creative) {
// 				var data = player.data;
// 				var lastattk = player.lastAttackedEntity;
// 				if (data has "ExcaliburState") {
// 					var state = data.memberGet("ExcaliburState") as bool;
// 					if (state == true) {
// 						if (!isNull(lastattk)) {
// 							lastattk.setDead();
// 							lastattk = null;
// 							player.update(data + {"ExcaliburState": false});
// 						}
// 					}
// 				}
// 			} else {
// 				event.cancel();
// 			}
// 		}
// 	}
// });

// events.onItemExpire(function(event as ItemExpireEvent) {
// 	if (!event.item.world.remote) {
// 		var item = event.item.item;
// 		// print(item.name);
// 		// print(item.matches(<contenttweaker:drinking_water_tank>));
// 		if (item.matches(<contenttweaker:drinking_water_tank>)) {
// 			item = <contenttweaker:empty_drinking_water_tank>;
// 		}
// 	}
// });



// val watertank_maxdamage = 40;

// var EwaterTank = VanillaFactory.createItem("empty_drinking_water_tank");
// EwaterTank.setMaxStackSize(1);
// // EwaterTank.onItemUse = function(player, world, pos, hand, facing, blockHit) {
// // 	if (!world.remote) {
// // 		if (player.creative) return ActionResult.pass();
// // 		var item = player.getHeldItem(Hand.main());
// // 		if (item.matches(itemUtils.getItem("contenttweaker:empty_drinking_water_tank"))) {
// // 			var block = world.getBlock(pos);
// // 			if (player.isSneaking && block.definition.id == "toughasnails:rain_collector" && block.meta > 0) {
// // 				player.setItemToSlot(crafttweaker.entity.IEntityEquipmentSlot.mainHand(), itemUtils.getItem("contenttweaker:drinking_water_tank", 38));
// // 				world.setBlockState(block.definition.getStateFromMeta(block.meta - 1), pos);
// // 				return ActionResult.success();
// // 			}
// // 		}
// // 	}
// // 	return ActionResult.pass();
// // };
// EwaterTank.register();

// var waterTank = VanillaFactory.createItem("drinking_water_tank");
// waterTank.setMaxStackSize(1);
// waterTank.setMaxDamage(watertank_maxdamage);
// waterTank.setItemUseAction("DRINK");
// waterTank.onItemUse = function(player, world, pos, hand, facing, blockHit) {
// 	if (!world.remote) {
// 		if (player.creative) return "PASS";
// 		if (!player.isSneaking) {
// 			if (item.damage < (watertank_maxdamage - 1)) {
// 				item.damage(1, player);
// 				player.addPotionEffect(<potion:toughasnails:hydration>.makePotionEffect(5, 1));
// 			} else {
// 				player.setItemToSlot(crafttweaker.entity.IEntityEquipmentSlot.mainHand(), itemUtils.getItem("contenttweaker:empty_drinking_water_tank"));
// 				player.addPotionEffect(<potion:toughasnails:hydration>.makePotionEffect(5, 1));
// 			}
// 			return "SUCCESS";
// 		}
// 	}
// 	return "PASS";
// };
// waterTank.itemRightClick = function(item, world, player, hand) {
// 	if (!world.remote) {
// 		if (player.creative) return "PASS";
// 		if (!player.isSneaking) {
// 			if (item.damage < (watertank_maxdamage - 1)) {
// 				item.damage(1, player);
// 				player.addPotionEffect(<potion:toughasnails:hydration>.makePotionEffect(5, 1));
// 			} else {
// 				if (hand == "MAIN_HAND") {
// 					player.setItemToSlot(crafttweaker.entity.IEntityEquipmentSlot.mainHand(), itemUtils.getItem("contenttweaker:empty_drinking_water_tank"));
// 					player.addPotionEffect(<potion:toughasnails:hydration>.makePotionEffect(5, 1));
// 				} else {
// 					player.setItemToSlot(crafttweaker.entity.IEntityEquipmentSlot.offhand(), itemUtils.getItem("contenttweaker:empty_drinking_water_tank"));
// 					player.addPotionEffect(<potion:toughasnails:hydration>.makePotionEffect(5, 1));
// 				}
// 			}
// 			return "SUCCESS";
// 		}
// 		if (item.damage == 0) {
// 			if (hand == "MAIN_HAND") {
// 				player.setItemToSlot(crafttweaker.entity.IEntityEquipmentSlot.mainHand(), itemUtils.getItem("contenttweaker:empty_drinking_water_tank"));
// 				player.addPotionEffect(<potion:toughasnails:hydration>.makePotionEffect(108000, 1));
// 			} else {
// 				player.setItemToSlot(crafttweaker.entity.IEntityEquipmentSlot.offhand(), itemUtils.getItem("contenttweaker:empty_drinking_water_tank"));
// 				player.addPotionEffect(<potion:toughasnails:hydration>.makePotionEffect(18000, 1));
// 			}
// 			return "SUCCESS";
// 		}
// 	}
// 	return "PASS";
// };
// waterTank.register();

deathTeleporter.itemRightClick = function(item, world, player, hand) {
	if (!world.remote && player.isSneaking) {
		var deathinfo_item = player.getHeldItem(Hand.off());
		if (item.matches(player.getHeldItem(Hand.main())) && deathinfo_item.matches(itemUtils.getItem("gravestone:death_info"))) {
			var deathinfo = deathinfo_item.tag;
			if (deathinfo has "info") {
				print(deathinfo.memberGet("info").memberGet("pos_y") as int);
				return "SUCCESS";
			} else {
				player.sendChat(game.localize("item.contenttweaker.death_teleporter.message.error.1"));
				return "PASS";
			}
		}
		return "PASS";
	}
	return "PASS";
};

<contenttweaker:death_teleporter>.withTag({display: {Lore: ["X:-216,Y:68,Z:179"]}, info: {pos_y: 68, pos_z: 179, pos_x: -216, name: "WakelessSloth56", dim: 0, time: 1605376344890 as long, uuid: "2845a52b-eb23-4b52-9f81-f0f0b5755391", items: []}})


deathTeleporter.onItemUse = function(player, world, pos, hand, facing, blockHit) {
	if (!world.remote && player.isSneaking) {
		val item = player.getHeldItem(hand);
		if (item.definition.id == "contenttweaker:death_teleporter") {
			val deathinfo = item.tag;
			if ((deathinfo has "pos_x") && (deathinfo has "pos_y") && (deathinfo has "pos_z") && (deathinfo has "dim") && (deathinfo has "uuid")) {
				val player_uuid = (player as IEntity).getUUID().asString();
				if (player_uuid == deathinfo.uuid) {
					if (player.getDimension() == deathinfo.dim) {
						val pos_x = deathinfo.pos_x;
						val pos_y = deathinfo.pos_y;
						val pos_z = deathinfo.pos_z;
						player.setItemToSlot(crafttweaker.entity.IEntityEquipmentSlot.mainHand(), null);
						val enderpearl = player.getHeldItem(Hand.off());
						if (enderpearl.matches(itemUtils.getItem("ore:enderpearl") * 16)){
							player.setItemToSlot(crafttweaker.entity.IEntityEquipmentSlot.offhand(), null);
						} else {
							player.addPotionEffect(<potion:minecraft:poison>.makePotionEffect(300, 3));
							player.addPotionEffect(<potion:minecraft:weakness>.makePotionEffect(1200, 3));
						}
						server.commandManager.executeCommand(
							server,
							"teleport " + player_uuid + " " + pos_x + " " + pos_y + " " + pos_z
						);
						return ActionResult.success();
					}
					player.sendChat(game.localize("item.contenttweaker.death_teleporter.message.error.3"));
					return ActionResult.fail();
				}
				player.sendChat(game.localize("item.contenttweaker.death_teleporter.message.error.2"));
				return ActionResult.fail();
			}
			player.sendChat(game.localize("item.contenttweaker.death_teleporter.message.error.1"));
			return ActionResult.fail();
		}
		return ActionResult.pass();
	}
	return ActionResult.pass();
};